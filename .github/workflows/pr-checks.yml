name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    name: Code Formatting & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format
    
    - name: Check code formatting
      working-directory: InvertedPendulum-STM32
      run: |
        echo "Checking code formatting..."
        
        # Find all C++ files and check formatting
        FAILED_FILES=""
        for file in $(find Core/App -name "*.cpp" -o -name "*.hpp"); do
          if ! clang-format --dry-run --Werror "$file" 2>/dev/null; then
            FAILED_FILES="$FAILED_FILES $file"
          fi
        done
        
        if [ ! -z "$FAILED_FILES" ]; then
          echo "❌ The following files are not properly formatted:"
          for file in $FAILED_FILES; do
            echo "  - $file"
          done
          echo ""
          echo "Please run 'clang-format -i' on these files to fix formatting."
          exit 1
        else
          echo "✅ All files are properly formatted!"
        fi

  fast-tests:
    name: Fast TDD Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
    
    - name: Build and test
      working-directory: InvertedPendulum-STM32
      run: |
        # Use the automated build script
        chmod +x build_pc.sh
        ./build_pc.sh
        
        # Check exit code
        if [ $? -eq 0 ]; then
          echo "✅ All tests passed in PR check!"
        else
          echo "❌ Tests failed in PR check!"
          exit 1
        fi

